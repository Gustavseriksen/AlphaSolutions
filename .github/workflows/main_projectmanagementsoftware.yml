# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy JAR app to Azure Web App - ProjectManagementSoftware

on: #Triggers jobs, når man pusher til main eller opretter pull request
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build: #første job
    runs-on: ubuntu-latest  #ubuntu er en linux server
    permissions: #læs op på det her
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Build with Maven  # nedenfor er secrets fra github
        env:
          PROD_DATABASE_URL: ${{secrets.PROD_DATABASE_URL}}
          PROD_USERNAME: ${{secrets.PROD_USERNAME}}
          PROD_PASSWORD: ${{secrets.PROD_PASSWORD}}
        run: mvn clean install  #kører maven life cycle fra clean til install

      - name: Upload artifact for deployment job #uploader en jar fil. specifikt: AlphaSolutions-0.0.1-SNAPSHOT
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'  #filen der bliver gemt er en jar fil. vi kan også finde den inde på github
  qodana:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis
      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2025.1
        with:
          pr-mode: false
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          QODANA_ENDPOINT: 'https://api.qodana.cloud'

  deploy:
    runs-on: ubuntu-latest
    needs: build        #kører først deployment når build er godkendt
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job   #uploader jar fil (som er blevet gemt i "Upload artifact for deployment job") så den kan blive deployed
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Login to Azure  #her vi logger ind på azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_8FF73BDB5AC74D31865B20C69561E49C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7D2EA0B20EF04EC4B6C872D9F1BF3FC1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1B448134777948BC8DCD7FB852252478 }}

      - name: Deploy to Azure Web App   #her bliver aplikationen deployed ud fra den uploadede jar fil
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ProjectManagementSoftware'
          slot-name: 'Production'
          package: '*.jar'
          
